import telebot
from telebot import types
import sqlite3

bot = telebot.TeleBot('7020103895:AAEKOpg07idMUJu3RY7lvMLEY29UmhfYCoM')

id = None
turName = None
descr = None
info = ''
balance = 0
nick = ''
adress = ''
id = ''
link = ''
numparticipants = 0
price = 0
admins = 'lT_e_m_4_i_kl'
numuser = 0
maxusers = 0

@bot.message_handler(commands=['start'])
def start(message):
    
    global nick
    global adress
    global id
    global numuser

    nick = message.from_user.first_name
    adress = message.from_user.username
    id = message.from_user.id

    connection = sqlite3.connect('TestBase.db')
    cursor = connection.cursor()
    cursor.execute('CREATE TABLE IF NOT EXISTS Tur (id INTEGER PRIMARY KEY,turname TEXT NOT NULL,descript TEXT, organ TEXT, link TEXT, price INTEGER, numuser INTEGER, maxusers INTEGER)')
    connection.commit()
    connection.close()

    connection = sqlite3.connect('TestBase.db')
    cursor = connection.cursor()
    cursor.execute('CREATE TABLE IF NOT EXISTS Users (id INTEGER PRIMARY KEY,name TEXT NOT NULL,adress TEXT NOT NULL, balance INTEGER)')
    connection.commit()
    connection.close()

    connection = sqlite3.connect('TestBase.db')
    cursor = connection.cursor()
    cursor.execute('INSERT INTO Users (name, adress, balance) VALUES (?, ?, ?)', (nick,adress,balance))
    connection.commit()
    connection.close()

    keybord = types.ReplyKeyboardMarkup(resize_keyboard=True)    
    Rbtn1 = types.KeyboardButton('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ç—É—Ä–Ω–∏—Ä—ã')
    Rbtn2 = types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å')
    Rbtn3 = types.KeyboardButton('–ú–æ–∏ —Ç—É—Ä–Ω–∏—Ä—ã üîí')

    keybord.row(Rbtn1)
    keybord.row(Rbtn2)
    keybord.row(Rbtn3)
    
    welcomMessage = f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ –≤–≤–µ–¥–∏: /help'
    bot.send_message(message.chat.id, welcomMessage, parse_mode='html', reply_markup=keybord)
    

# @bot.message_handler(commands=['test'])
# def test(message):
#     connection = sqlite3.connect('TestBase.db')
#     cursor = connection.cursor()
#     cursor.execute(f"UPDATE Users SET balance = '0' WHERE adress = 'lT_e_m_4_i_kl'")
#     connection.commit()
#     print('GOOD')


@bot.message_handler(commands=['help'])
def help(message):
    helpMessage = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ... –µ—ë –Ω–µ—Ç('
    bot.send_message(message.chat.id, helpMessage, parse_mode='html')


@bot.message_handler(commands=['GO'])
def GO(message):

            checkadress = str(message.from_user.username)

            connection = sqlite3.connect('TestBase.db')
            cursor = connection.cursor()
            cursor.execute(f"SELECT link FROM Tur WHERE id ='1'")
            link = str(cursor.fetchone())[2:][:-3]
            connection = sqlite3.connect('TestBase.db')
            cursor = connection.cursor()
            cursor.execute(f"SELECT balance FROM Users WHERE adress = '{checkadress}'")
            userbalance = str(cursor.fetchone())[1:][:-2]
            connection = sqlite3.connect('TestBase.db')
            cursor = connection.cursor()
            cursor.execute(f"SELECT price FROM Tur WHERE id ='1'")
            price = str(cursor.fetchone())[1:][:-2]
            connection = sqlite3.connect('TestBase.db')
            cursor = connection.cursor()
            cursor.execute(f"SELECT numuser FROM Tur WHERE id ='1'")
            numuser = str(cursor.fetchone())[1:][:-2]
            cursor = connection.cursor()
            cursor.execute(f"SELECT maxusers FROM Tur WHERE id ='1'")
            itsmaxusers = str(cursor.fetchone())[1:][:-2]
            connection.commit()

            itsmaxusers = int(itsmaxusers)
            numuser = int(numuser)
            price = int(price)
            userbalance = int(userbalance)

            if numuser >= itsmaxusers: 
                bot.send_message(message.chat.id, '–ö–æ–º–Ω–∞—Ç–∞ —É–∂–µ –Ω–∞–±—Ä–∞–Ω–∞')
            elif userbalance < price:
                bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ')
            else: 
                connection = sqlite3.connect('TestBase.db')
                cursor = connection.cursor()
                cursor.execute(f"UPDATE Tur SET numuser = {numuser+1} WHERE id = '1'")
                connection.commit()

                cursor.execute(f"UPDATE Users SET balance = {userbalance-price} WHERE adress = '{checkadress}'")
                connection.commit()
                bot.send_message(message.chat.id, f'‚Ä¢ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –Ω–∞ —Ç—É—Ä–Ω–∏—Ä ‚Ä¢\n–ó–∞–ª–µ—Ç–∞–π –Ω–∞ –∫–∞–Ω–∞–ª: {link}\n–∏ –æ–∂–∏–¥–∞–π –∫–æ–¥ –æ—Ç LOBBY')
                bot.send_message(message.chat.id, '‚¨•–ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤—ã–∑–æ–≤–µ –∫–æ–º–∞–Ω–¥—ã *GO\n–≤–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ —É–ª–µ—Ç—è—Ç –Ω–∞ —á–∞–π –∞–¥–º–∏–Ω—É)')    
 


@bot.message_handler(content_types=['text'])
def checkText(message):
    # global inlineKeybord
    admin = ['lT_e_m_4_i_kl', 'Okaykay123456', 'turatvv', 'Mr_BUDDA']
    
    if message.text == '–ú–æ–∏ —Ç—É—Ä–Ω–∏—Ä—ã üîí' and message.from_user.username in admin:
        inlineKeybord = types.InlineKeyboardMarkup()
        Ilbtn = types.InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä',callback_data="createTur")
        inlineKeybord.add(Ilbtn)
        bot.reply_to(message, '‚Ä¢ –í–∞—à–∏ —Ç—É—Ä–Ω–∏—Ä—ã ‚Ä¢', reply_markup=inlineKeybord)

    elif message.text == '–ú–æ–∏ —Ç—É—Ä–Ω–∏—Ä—ã üîí' and message.from_user.username != 'lT_e_m_4_i_kl' or message.from_user.username == 'Okaykay123456':
        bot.reply_to(message, '‚Ä¢ –£ –≤–∞—Å –Ω–µ—Ç—É –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω–æ–º—É —Ä–∞–∑–¥–µ–ª—É ‚Ä¢')
        

    elif message.text == '–ü—Ä–æ—Ñ–∏–ª—å':

        checkadress = message.from_user.username
        connection = sqlite3.connect('TestBase.db')
        cursor = connection.cursor()
        cursor.execute(f"SELECT balance FROM Users WHERE adress ='{checkadress}'")
        userbalance = str(cursor.fetchone())[1:][:-2]

        global nick
        global id
        results = ''
        row = ''

        connection = sqlite3.connect('TestBase.db')
        cursor = connection.cursor()
        cursor.execute(f"SELECT * FROM Users WHERE adress = '{adress}'")
        if cursor.rowcount > 0 : 
             results = cursor.fetchall()
             for row in results :
                balance = row[3]

        bot.reply_to(message, f'‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å ‚Ä¢\n–ù–∏–∫–Ω–µ–π–º: {message.from_user.first_name}\nID:\
 {message.from_user.id}\n–ë–∞–ª–∞–Ω—Å: {userbalance}‚ÇΩ')  
        bot.send_message(message.chat.id, '‚¨•–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –≤—ã–≤–æ–¥–∞ –±–∞–ª–∞–Ω—Å–∞\n–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @lT_e_m_4_i_kl')

    elif  message.text == '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ç—É—Ä–Ω–∏—Ä—ã':
                      
            connection = sqlite3.connect('TestBase.db')
            cursor = connection.cursor()
            cursor.execute(f"SELECT numuser FROM Tur WHERE id ='1'")
            numuser = str(cursor.fetchone())[1:][:-2]
            cursor = connection.cursor()
            cursor.execute(f"SELECT maxusers FROM Tur WHERE id ='1'")
            itsmaxusers = str(cursor.fetchone())[1:][:-2]
            connection.commit()
            itsmaxusers = int(itsmaxusers)
            numuser = int(numuser)

            if numuser >= itsmaxusers:

                connection = sqlite3.connect('TestBase.db')
                cursor = connection.cursor()    
                cursor.execute("DELETE FROM Tur WHERE id = '1'")

                bot.reply_to(message, '–°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')

            else:
                checkadress = None
                connection = sqlite3.connect('TestBase.db')
                cursor = connection.cursor()
                cursor.execute(f"SELECT turname FROM Tur WHERE organ !='{checkadress}'")
                itisturname = str(cursor.fetchone())[2:][:-3]

                cursor.execute(f"SELECT organ FROM Tur WHERE organ !='{checkadress}'")
                itisorgan = str(cursor.fetchone())[2:][:-3]

                cursor.execute(f"SELECT descript FROM Tur WHERE organ !='{checkadress}'")
                itisdescript = str(cursor.fetchone())[2:][:-3]    

                cursor.execute(f"SELECT price FROM Tur WHERE organ !='{checkadress}'")
                itisprice = str(cursor.fetchone())[1:][:-2]


                if turName == None: bot.reply_to(message, '–°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')

                
                else: fulltur = f'–ù–∞–∑–≤–∞–Ω–∏–µ: {itisturname}\n–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: @{itisorgan}\n–°—Ç–æ–∏–º–æ—Å—Ç—å —É—á–∞—Å—Ç–∏—è: {itisprice}‚ÇΩ\n–ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {maxusers}\n–û–ø–∏—Å–∞–Ω–∏–µ: {itisdescript}'

                bot.reply_to(message, f'‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è ‚Ä¢\n{fulltur}\n...\n–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–µ –ø—Ä–æ–ø–∏—à–∏ /GO', reply_markup='')
        
    else:
            
        bot.reply_to(message, '‚Ä¢ –ì–ª–∞–≤–Ω–æ–µ –ú–ï–ù–Æ ‚Ä¢', reply_markup='')


@bot.callback_query_handler(func=lambda callback:True)  
def createTur(callback):
    if callback.data == 'createTur':
            bot.reply_to(callback.message, '–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞')
            bot.register_next_step_handler(callback.message, on_click)     
           
def on_click(message):
        global turName
        turName = message.text.strip()
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–∞')
        bot.register_next_step_handler(message, on_click2)

def on_click2(message):
        global descr
        descr = message.text.strip()
        bot.send_message(message.chat.id, '–£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –¢–ì –∫–∞–Ω–∞–ª –¥–ª—è —Ç–µ—Ö,\n–∫—Ç–æ –æ–ø–ª–∞—Ç–∏–ª –≤—Ö–æ–¥')
        bot.register_next_step_handler(message, on_click3)

def on_click3(message):
        global link
        link = message.text.strip()
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç—É—Ä–Ω–∏—Ä–∞')
        bot.register_next_step_handler(message, on_click4)

def on_click4(message):
        global link
        global descr
        global price
        price = message.text.strip()
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤')
        bot.register_next_step_handler(message, on_click5)


def on_click5(message):
        global maxusers
        maxusers = message.text.strip()
        organizer = message.from_user.username
        readyTur = f'‚Ä¢–¢—É—Ä–Ω–∏—Ä —Å–æ–∑–¥–∞–Ω‚Ä¢\n[ –ù–∞–∑–≤–∞–Ω–∏–µ: {turName}\n–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: @{organizer}\n–°—Ç–æ–∏–º–æ—Å—Ç—å —É—á–∞—Å—Ç–∏—è: {price}‚ÇΩ\n–ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {maxusers} ]\n\
–û–ø–∏—Å–∞–Ω–∏–µ: {descr}'

        
    
        connection=sqlite3.connect('TestBase.db')
        cursor=connection.cursor()
        cursor.execute("DELETE FROM Tur WHERE id > 0")
        connection.commit()
        connection.close()

        connection = sqlite3.connect('TestBase.db')
        cursor = connection.cursor()
        cursor.execute('INSERT INTO Tur (turname, descript, organ, link, price, numuser, maxusers) VALUES (?, ?, ?, ?, ?, ?, ?)', (turName, descr, organizer, link, price, numuser, maxusers))
        connection.commit()
        connection.close()

        bot.send_message(message.chat.id, f'{readyTur}',reply_markup='')

# bot.polling()    

if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True, interval=0)
        except Exception as e: 
            print('‚ùå‚ùå‚ùå‚ùå‚ùå –°—Ä–∞–±–æ—Ç–∞–ª–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ! ‚ùå‚ùå‚ùå‚ùå‚ùå')